// ignore_for_file: prefer_final_fields

import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';

class FirebaseSignInup extends StatefulWidget {
  const FirebaseSignInup({Key? key}) : super(key: key);

  @override
  State<FirebaseSignInup> createState() => _FirebaseSignInupState();
}

class _FirebaseSignInupState extends State<FirebaseSignInup> {
  var _mail = TextEditingController(), _pass = TextEditingController();

  var textFieldBorderStyle = OutlineInputBorder(
      borderRadius: BorderRadius.circular(15),
      borderSide: BorderSide(color: Colors.green, width: 1.5));

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Firebase add users"),
      ),
      body: SingleChildScrollView(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          children: [
            SizedBox(height: 30),
            TextFormField(
              decoration: InputDecoration(
                  enabledBorder: textFieldBorderStyle,
                  focusedBorder: textFieldBorderStyle,
                  errorBorder: textFieldBorderStyle),
              controller: _mail,
              validator: fieldValidator,
            ),
            SizedBox(height: 30),
            TextFormField(
              decoration: InputDecoration(
                  enabledBorder: textFieldBorderStyle,
                  focusedBorder: textFieldBorderStyle,
                  errorBorder: textFieldBorderStyle),
              controller: _pass,
              validator: fieldValidator,
            ),
            SizedBox(height: 30),
            ButtonBar(
              alignment: MainAxisAlignment.spaceEvenly,
              children: [
                OutlinedButton(
                    onPressed: () async {
                      try {
                        await FirebaseAuth.instance
                            .createUserWithEmailAndPassword(
                                email: _mail.text, password: _pass.text);
                      } catch (exception) {
                        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                            content: Text("Error found : $exception")));
                      }
                      ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(content: Text("Signed up successfully...")));
                      setState(() {

                      });
                    },
                    child: Text("Sign Up")),
                OutlinedButton(
                    onPressed: () async {
                      try {
                        await FirebaseAuth.instance.signInWithEmailAndPassword(
                            email: _mail.text, password: _pass.text);
                      } catch (exception) {
                        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                            content: Text("Error found : $exception")));
                      }
                      ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(content: Text("Signed in successfully...")));
                    },
                    child: Text("Sign In")),
              ],
            ),
            SizedBox(height: 30),
          ],
        ),
      ),
    );
  }

  String? fieldValidator(imputValue) {
    if (imputValue!.isNotEmpty) {
      return null;
    } else {
      return "This Field can't be empty !!";
    }
  }
}
